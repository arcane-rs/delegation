error[E0053]: method `as_ref` has an incompatible type for trait
 --> tests/fail/delegate/external_trait_wrong_declaration.rs:5:15
  |
5 |     fn as_ref(&mut self) -> &mut T;
  |               ^^^^^^^^^ types differ in mutability
  |
  = note: expected signature `fn(&__delegate_AsRefDef__Wrapper<__Delegate>) -> &T`
             found signature `fn(&mut __delegate_AsRefDef__Wrapper<__Delegate>) -> &mut T`
help: change the self-receiver type to match the trait
  |
5 |     fn as_ref(&self) -> &mut T;
  |               ~~~~~

error[E0053]: method `as_ref` has an incompatible type for trait
  --> tests/fail/delegate/external_trait_wrong_declaration.rs:5:15
   |
5  |       fn as_ref(&mut self) -> &mut T;
   |                 ^^^^^^^^^ types differ in mutability
...
24 | / #[delegate(derive(
25 | |     AsRef<str> as AsRefDef,
26 | |     AsStr as AsStrDef,
27 | | ))]
   | |___- in this procedural macro expansion
   |
   = note: expected signature `fn(&Name) -> &str`
              found signature `fn(&mut Name) -> &mut str`
   = note: this error originates in the macro `AsRefDef` which comes from the expansion of the attribute macro `delegate` (in Nightly builds, run with -Z macro-backtrace for more info)
help: change the self-receiver type to match the trait
   |
5  |     fn as_ref(&self) -> &mut T;
   |               ~~~~~

error[E0308]: mismatched types
 --> tests/fail/delegate/external_trait_wrong_declaration.rs:3:1
  |
3 | #[delegate(as = AsRef)]
  | ^^^^^^^^^^^^^^^^^^^^^^^ types differ in mutability
4 | trait AsRefDef<T: ?Sized> {
5 |     fn as_ref(&mut self) -> &mut T;
  |                             ------ expected `&'__delegate mut T` because of return type
  |
  = note: expected mutable reference `&'__delegate mut T`
                     found reference `&T`
  = note: this error originates in the attribute macro `delegate` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/fail/delegate/external_trait_wrong_declaration.rs:3:1
   |
3  |   #[delegate(as = AsRef)]
   |   ^^^^^^^^^^^^^^^^^^^^^^^
   |   |
   |   types differ in mutability
   |   expected `&mut str` because of return type
...
24 | / #[delegate(derive(
25 | |     AsRef<str> as AsRefDef,
26 | |     AsStr as AsStrDef,
27 | | ))]
   | |___- in this procedural macro expansion
   |
   = note: expected mutable reference `&mut str`
                      found reference `&str`
   = note: this error originates in the macro `AsRefDef` which comes from the expansion of the attribute macro `delegate` (in Nightly builds, run with -Z macro-backtrace for more info)
