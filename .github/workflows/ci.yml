name: CI

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: 1

jobs:

  ################
  # Pull Request #
  ################

  pr:
    if: ${{ github.event_name == 'pull_request' }}
    needs:
      - clippy
      - rustdoc
      - rustfmt
      - test
    runs-on: ubuntu-latest
    steps:
      - run: true




  ##########################
  # Linting and formatting #
  ##########################

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy

      - run: make cargo.lint

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt

      - run: make cargo.fmt check=yes




  ###########
  # Testing #
  ###########

  test:
    strategy:
      fail-fast: false
      matrix:
        toolchain: ["stable", "beta", "nightly"]
        os: ["ubuntu", "macOS", "windows"]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rust-src

      - run: cargo install cargo-careful
        if: ${{ matrix.toolchain == 'nightly' }}

      - run: make test.cargo crate=delegation-codegen
                  careful=${{ (matrix.toolchain == 'nightly' && 'yes')
                           ||                                   'no' }}
      - run: make test.cargo crate=delegation
                  careful=${{ (matrix.toolchain == 'nightly' && 'yes')
                           ||                                   'no' }}




  #################
  # Documentation #
  #################

  rustdoc:
    strategy:
      matrix:
        crate:
          - delegation-codegen
          - delegation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - run: make cargo.doc crate=${{ matrix.crate }}
                            private=yes open=no
        env:
          RUSTFLAGS: -D warnings
